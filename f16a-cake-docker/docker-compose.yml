version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: hdingo_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/chat_system.sql:/docker-entrypoint-initdb.d/chat_system.sql
    ports:
      - "0:3306"
    networks:
      - hdingo_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  backend:
    build: ./backend
    container_name: hdingo_backend
    restart: unless-stopped
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=3306
      - FLASK_DEBUG=${FLASK_DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - MAIL_SERVER=${MAIL_SERVER}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USE_TLS=${MAIL_USE_TLS}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - AI_API_URL=${AI_API_URL}
      - AI_MODEL=${AI_MODEL}
      - AI_API_KEY=${AI_API_KEY}
      - DOCKER_ENV=${DOCKER_ENV}
    volumes:
      - ./backend/rag:/app/rag
      - ./backend/pdfs:/app/pdfs
    ports:
      - "${BACKEND_PORT}:8000"
    networks:
      - hdingo_network
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/api/hello')"]
      timeout: 30s
      retries: 3

  frontend:
    build: ./frontend
    container_name: hdingo_frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT}:80"
    networks:
      - hdingo_network
    depends_on:
      - backend

networks:
  hdingo_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
